package com.collection.set;

import java.util.HashSet;
import java.util.Set;

public final class HeavenlyBody {
	private final String name;
	private final double orbitalDuration;
	private final Set<HeavenlyBody> satellites;
	
	public HeavenlyBody(String name, double orbitalDuration) {
		this.name = name;
		this.orbitalDuration = orbitalDuration;
		this.satellites = new HashSet<>();
	}

	public boolean addMoon(HeavenlyBody moon) {
		return this.satellites.add(moon);
	}
	
	public String getName() {
		return name;
	}

	public double getOrbitalDuration() {
		return orbitalDuration;
	}

	public Set<HeavenlyBody> getSatellites() {
		return new HashSet<>(this.satellites);
	}

	
	/**
	 *	We should override both equals() and hashcode() when using object 
	 *	as elements in Set or as key in Map to avoid 
	 *	unexpected behavior and avoid duplicates
	 */
	@Override
	public boolean equals(Object obj) {
		System.out.println("equals() called");
		
		/* This is the default implementation given by Eclipse generator.
		 * 
		 * if (this == obj) return true; if (obj == null) return false; if (getClass()
		 * != obj.getClass()) return false; HeavenlyBody other = (HeavenlyBody) obj; if
		 * (name == null) { if (other.name != null) return false; } else if
		 * (!name.equals(other.name)) return false; return true;
		 */
		
		if(this == obj) { 
			return true;
		} 
		System.out.println("this.getClass" + this.getClass());
		System.out.println("obj.getClass" + obj.getClass());
		if(obj == null || this.getClass() != obj.getClass()) {
			return false;
		}
		String name = ((HeavenlyBody)obj).getName();
		return this.getName().equals(name);
		
		
	}
	
	@Override
	public int hashCode() {
		/* Default implementation generated by Eclipse
		 * 
		 * final int prime = 31; 
		 * int result = 1; 
		 * result = prime * result + ((name == null) ? 0 : name.hashCode()); 
		 * return result;
		 */
		System.out.println("hasCode() called ");
		// 51 is any integer no within the range of integer.
		return this.name.hashCode() + 51;
	}
	
	
}
